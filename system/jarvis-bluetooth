#!/usr/bin/python2

from bluetool import Bluetooth
import sys, json, subprocess


# check terminal command
def terminal(cmd):
	try:
		return (0, subprocess.check_output(cmd.split(" ")))
	except subprocess.CalledProcessError as e:
		return (e.returncode, e.output + str(e.cmd))

# print program usage
def usage():
	print("Usage: jarvis-bluetooth")
	print("")
	print("Parameters:")
	print("  --paired                JSON list of paired devices")
	print("  --available             JSON list of available devices")
	print("  --connected             JSON list of connected devices")
	print("  --pair <address>        Pair with a Bluetooth address")
	print("  --trust <address>       Trust a Bluetooth address")
	print("  --connect <address>     Connect to a Bluetooth address")
	print("  --disconnect <address>  Disconnect from a Bluetooth address")
	print("  --remove <address>      Unpair from a Bluetooth address")

# get option from sys.argv
def get_option(name):
	try:
		return sys.argv[sys.argv.index(name) + 1]
	except Exception as e:
		usage()
		exit(1)



if "-h" in sys.argv or "--help" in sys.argv:
	usage()
	exit(0)

if len(sys.argv) < 2:
	usage()
	exit(1)


bt = Bluetooth()
bt.make_discoverable()

if "--use-bluetoothctl" not in sys.argv:
	if "--pair" in sys.argv:
		addr = get_option("--pair")
		print(json.dumps({"success":bt.pair(addr), "error": ""}))
		exit(0)
	if "--trust" in sys.argv:
		addr = get_option("--trust")
		print(json.dumps({"success":bt.trust(addr), "error": ""}))
		exit(0)
	if "--connect" in sys.argv:
		addr = get_option("--connect")
		print(json.dumps({"success":bt.connect(addr), "error": ""}))
		exit(0)
	if "--disconnect" in sys.argv:
		addr = get_option("--disconnect")
		print(json.dumps({"success":bt.disconnect(addr), "error": ""}))
		exit(0)
	if "--remove" in sys.argv:
		addr = get_option("--remove")
		print(json.dumps({"success":bt.remove(addr), "error": ""}))
		exit(0)

# turned out to be more reliable (sometimes)
if "--pair" in sys.argv:
	addr = get_option("--pair")
	out = terminal("bluetoothctl pair %s" % addr)
	print(json.dumps({"success": True if out[0] == 0 else False, "error": out[1]}))
	exit(0)
if "--trust" in sys.argv:
	addr = get_option("--trust")
	out = terminal("bluetoothctl trust %s" % addr)
	print(json.dumps({"success": True if out[0] == 0 else False, "error": out[1]}))
	exit(0)
if "--connect" in sys.argv:
	addr = get_option("--connect")
	out = terminal("bluetoothctl connect %s" % addr)
	print(json.dumps({"success": True if out[0] == 0 else False, "error": out[1]}))
	exit(0)
if "--disconnect" in sys.argv:
	addr = get_option("--disconnect")
	out = terminal("bluetoothctl disconnect %s" % addr)
	print(json.dumps({"success": True if out[0] == 0 else False, "error": out[1]}))
	exit(0)
if "--remove" in sys.argv:
	addr = get_option("--remove")
	out = terminal("bluetoothctl unpair %s" % addr)
	print(json.dumps({"success": True if out[0] == 0 else False, "error": out[1]}))
	exit(0)


# bluetooth commands
result = []
if "--available" in sys.argv:
	bt.scan(2)
	result.append(bt.get_available_devices())
if "--paired" in sys.argv:
	result.append(bt.get_paired_devices())
if "--connected" in sys.argv:
	result.append(bt.get_connected_devices())

print(json.dumps({"result":result, "error": ""}))
exit(0)