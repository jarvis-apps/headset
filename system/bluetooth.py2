#!/usr/bin/python2

from bluetool import Bluetooth
import sys, json


def usage():
	print("Usage: python bluetooth.py2")
	print("")
	print("Parameters:")
	print("  --paired                JSON list of paired devices")
	print("  --available             JSON list of available devices")
	print("  --pair <address>        Pair with a Bluetooth address")
	print("  --trust <address>       Trust a Bluetooth address")
	print("  --connect <address>     Connect to a Bluetooth address")
	print("  --disconnect <address>  Disconnect from a Bluetooth address")
	print("  --remove <address>      Unpair from a Bluetooth address")

if "-h" in sys.argv or "--help" in sys.argv:
	usage()
	exit(0)	

if len(sys.argv) < 2:
	usage()
	exit(1)

# bluetooth commands
bt = Bluetooth()
bt.make_discoverable()

if "--pair" in sys.argv:
	addr = None
	try:
		addr = sys.argv[sys.argv.index("--pair") + 1]
	except Exception as e:
		usage()
		exit(1)
	print(json.dumps({"success":bt.pair(addr)}))
	exit(0)
if "--trust" in sys.argv:
	addr = None
	try:
		addr = sys.argv[sys.argv.index("--trust") + 1]
	except Exception as e:
		usage()
		exit(1)
	print(json.dumps({"success":bt.trust(addr)}))
	exit(0)
if "--connect" in sys.argv:
	addr = None
	try:
		addr = sys.argv[sys.argv.index("--connect") + 1]
	except Exception as e:
		usage()
		exit(1)
	print(json.dumps({"success":bt.connect(addr)}))
	exit(0)
if "--disconnect" in sys.argv:
	addr = None
	try:
		addr = sys.argv[sys.argv.index("--disconnect") + 1]
	except Exception as e:
		usage()
		exit(1)
	print(json.dumps({"success":bt.disconnect(addr)}))
	exit(0)
if "--remove" in sys.argv:
	addr = None
	try:
		addr = sys.argv[sys.argv.index("--remove") + 1]
	except Exception as e:
		usage()
		exit(1)
	print(json.dumps({"success":bt.remove(addr)}))
	exit(0)


bt.scan(2)
if "--paired" in sys.argv:
	print(json.dumps(bt.get_paired_devices()))
	exit(0)
if "--available" in sys.argv:
	print(json.dumps(bt.get_available_devices()))
	exit(0)

